version: 2

references:
  # Set up a cached virtualenv in which to install dependencies
  build-combined-checksum: &build-combined-checksum
    run:
      name: Build combined checksum
      command: |
        cat setup.py >> .checksum
        cat script/linting/requirements.txt >> .checksum
        cat script/testing/requirements.txt >> .checksum

  restore-build-dependency-cache: &restore-build-dependency-cache
    restore_cache:
      name: Restore build dependency cache
      key: deps-venv-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum ".checksum" }}

  install-dependencies: &install-dependencies
    run:
      name: Install dependencies
      command: |
        python3 -m venv venv
        . venv/bin/activate
        pip install -U pip setuptools
        pip install -r script/linting/requirements.txt -r script/testing/requirements.txt
        pip install -e .

  save-build-dependency-cache: &save-build-dependency-cache
    save_cache:
      name: Save build dependency cache
      key: deps-venv-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum ".checksum" }}
      paths:
      - "venv"

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-35:
          filters:
            tags:
              only: /.*/

      - build-36:
          filters:
            tags:
              only: /.*/

      - build-37:
          filters:
            tags:
              only: /.*/

      # - build-38:
      #     filters:
      #       tags:
      #         only: /.*/

      - lint:
          filters:
            tags:
              only: /.*/

      - release:
          requires:
            - build-35
            - build-36
            - build-37
            # - build-38
            - lint
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:
  build-35: &build-template
    docker:
      - image: circleci/python:3.5

    steps:
      - checkout

      - *build-combined-checksum
      - *restore-build-dependency-cache
      - *install-dependencies
      - *save-build-dependency-cache

      # Test & lint
      - run:
          name: Test
          command: |
            mkdir -p build/pytest
            . venv/bin/activate
            # TODO: we should put the coverage data somewhere
            py.test -v --cov=jacquard --junit-xml=build/pytest/junit.xml jacquard

      # Testing done, store results
      - store_test_results:
          path: build/pytest

  build-36:
    <<: *build-template
    docker:
      - image: circleci/python:3.6

  build-37:
    <<: *build-template
    docker:
      - image: circleci/python:3.7

  build-38:
    <<: *build-template
    docker:
      - image: circleci/python:3.8

  lint:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - *build-combined-checksum
      - *restore-build-dependency-cache
      - *install-dependencies
      - *save-build-dependency-cache

      - run:
          name: Lint
          command: |
            . venv/bin/activate
            script/linting/lint

      - run:
          name: Typecheck
          command: |
            . venv/bin/activate
            mypy -p jacquard --ignore-missing-imports --strict-optional

  release:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - run:
          name: Prepare environment
          commands: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip setuptools

            # setup_requires
            pip install pytest

            # for packaging
            pip install twine wheel

      - run:
          name: Release
          commands: |
            . venv/bin/activate
            rm -rf dist

            python setup.py sdist bdist_wheel

            twine upload dist/*
